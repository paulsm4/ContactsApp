21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
21:48:39.127 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
21:48:39.142 [main] WARN  org.hibernate.orm.connections.pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
21:48:39.267 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: using driver [org.apache.derby.jdbc.EmbeddedDriver] at URL [jdbc:derby:c:/temp/contactsdb]
21:48:39.267 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001001: Connection properties: {password=, user=app}
21:48:39.267 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001003: Autocommit mode: false
21:48:39.283 [main] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
21:48:39.283 [main] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
21:48:40.861 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Database ->
       name : Apache Derby
    version : 10.15.1.3 - (1853019)
      major : 10
      minor : 15
21:48:40.868 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - Driver ->
       name : Apache Derby Embedded JDBC Driver
    version : 10.15.1.3 - (1853019)
      major : 10
      minor : 15
21:48:40.868 [main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator - JDBC version : 4.2
21:48:40.870 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.DerbyTenSevenDialect
21:48:41.173 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
21:48:41.173 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b4825f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40ac6b76]
21:48:41.236 [main] DEBUG org.hibernate.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=app, schema=null}, physicalName=Name{catalog=app, schema=null}]
21:48:41.236 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: com.example.contactsapp.models.Contact -> contacts
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: contactId -> [contactId]
21:48:41.251 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [contactid] to be non-null as it is part of the primary key for table [contacts]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: name -> [name]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: email -> [email]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: phone1 -> [phone1]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: phone2 -> [phone2]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: address1 -> [address1]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: address2 -> [address2]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: city -> [city]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: state -> [state]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: zip -> [zip]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: notes -> []
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping class: com.example.contactsapp.models.Note -> notes
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: noteId -> [noteId]
21:48:41.251 [main] DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [noteid] to be non-null as it is part of the primary key for table [notes]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: Contact -> [contactId]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: text -> [text]
21:48:41.251 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped property: date -> [date]
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapping collection: com.example.contactsapp.models.Contact.notes -> notes
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Binding [ONE_TO_MANY] element type for a [SET]
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder - Mapped collection : com.example.contactsapp.models.Contact.notes
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder -    + table -> contacts
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder -    + key -> contactId
21:48:41.267 [main] DEBUG org.hibernate.boot.model.source.internal.hbm.ModelBinder -    + one-to-many -> com.example.contactsapp.models.Note
21:48:41.267 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.example.contactsapp.models.Contact
21:48:41.267 [main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl - Resolving reference to class: com.example.contactsapp.models.Contact
21:48:41.298 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Building session factory
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - SessionFactory name : null
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Automatic flush during beforeCompletion(): enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Automatic session close at end of transaction: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Statistics: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Deleted entity synthetic identifier rollback: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Default entity-mode: pojo
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Allow initialization of lazy state outside session : disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Using BatchFetchStyle : LEGACY
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Default batch fetch size: -1
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Maximum outer join fetch depth: null
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Default null ordering: NONE
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Order SQL updates by primary key: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Order SQL inserts for batching: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - multi-tenancy strategy : NONE
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JTA Track by Thread: enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Query language substitutions: {}
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Named query checking : enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Second-level query cache factory: null
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache region prefix: null
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Optimize second-level cache for minimal puts: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Structured second-level cache entries: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Second-level cache direct-reference entries: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Automatic eviction of collection cache: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch size: 0
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JDBC batch updates for versioned data: enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Scrollable result sets: enabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Wrap result sets: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JDBC3 getGeneratedKeys(): disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JDBC result set fetch size: null
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Connection release mode: AFTER_TRANSACTION
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - Generate SQL with comments: disabled
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - query : 
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - closed-handling : 
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - lists : 
21:48:41.298 [main] DEBUG org.hibernate.cfg.Settings - JPA compliance - transactions : 
21:48:41.361 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
21:48:41.361 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.format_sql=true, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect, java.class.path=C:\paul\proj\ContactsApp\struts-rest\ContactsApp\target\classes;C:\apache-tomcat-9.0.30\lib\annotations-api.jar;C:\apache-tomcat-9.0.30\lib\catalina-ant.jar;C:\apache-tomcat-9.0.30\lib\catalina-ha.jar;C:\apache-tomcat-9.0.30\lib\catalina-ssi.jar;C:\apache-tomcat-9.0.30\lib\catalina-storeconfig.jar;C:\apache-tomcat-9.0.30\lib\catalina-tribes.jar;C:\apache-tomcat-9.0.30\lib\catalina.jar;C:\apache-tomcat-9.0.30\lib\ecj-4.13.jar;C:\apache-tomcat-9.0.30\lib\el-api.jar;C:\apache-tomcat-9.0.30\lib\jasper-el.jar;C:\apache-tomcat-9.0.30\lib\jasper.jar;C:\apache-tomcat-9.0.30\lib\jaspic-api.jar;C:\apache-tomcat-9.0.30\lib\jsp-api.jar;C:\apache-tomcat-9.0.30\lib\servlet-api.jar;C:\apache-tomcat-9.0.30\lib\tomcat-api.jar;C:\apache-tomcat-9.0.30\lib\tomcat-coyote.jar;C:\apache-tomcat-9.0.30\lib\tomcat-dbcp.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-cs.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-de.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-es.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-fr.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-ja.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-ko.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-pt-BR.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-ru.jar;C:\apache-tomcat-9.0.30\lib\tomcat-i18n-zh-CN.jar;C:\apache-tomcat-9.0.30\lib\tomcat-jdbc.jar;C:\apache-tomcat-9.0.30\lib\tomcat-jni.jar;C:\apache-tomcat-9.0.30\lib\tomcat-util-scan.jar;C:\apache-tomcat-9.0.30\lib\tomcat-util.jar;C:\apache-tomcat-9.0.30\lib\tomcat-websocket.jar;C:\apache-tomcat-9.0.30\lib\websocket-api.jar;C:\Users\paulsm\.m2\repository\org\apache\struts\struts2-core\2.5.22\struts2-core-2.5.22.jar;C:\Users\paulsm\.m2\repository\org\freemarker\freemarker\2.3.28\freemarker-2.3.28.jar;C:\Users\paulsm\.m2\repository\ognl\ognl\3.1.26\ognl-3.1.26.jar;C:\Users\paulsm\.m2\repository\commons-fileupload\commons-fileupload\1.4\commons-fileupload-1.4.jar;C:\Users\paulsm\.m2\repository\commons-io\commons-io\2.6\commons-io-2.6.jar;C:\Users\paulsm\.m2\repository\org\apache\commons\commons-lang3\3.8.1\commons-lang3-3.8.1.jar;C:\Users\paulsm\.m2\repository\org\apache\struts\struts2-json-plugin\2.5.22\struts2-json-plugin-2.5.22.jar;C:\Users\paulsm\.m2\repository\org\hibernate\hibernate-core\5.4.0.Final\hibernate-core-5.4.0.Final.jar;C:\Users\paulsm\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\paulsm\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\paulsm\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\paulsm\.m2\repository\net\bytebuddy\byte-buddy\1.9.5\byte-buddy-1.9.5.jar;C:\Users\paulsm\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\paulsm\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\paulsm\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\paulsm\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\paulsm\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\paulsm\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\paulsm\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\paulsm\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\paulsm\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\paulsm\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\paulsm\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\paulsm\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\paulsm\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\paulsm\.m2\repository\org\apache\derby\derby\10.15.1.3\derby-10.15.1.3.jar;C:\Users\paulsm\.m2\repository\org\apache\derby\derbyshared\10.15.1.3\derbyshared-10.15.1.3.jar;C:\Users\paulsm\.m2\repository\org\apache\derby\derbytools\10.15.1.3\derbytools-10.15.1.3.jar;C:\Users\paulsm\.m2\repository\org\apache\logging\log4j\log4j-api\2.12.1\log4j-api-2.12.1.jar;C:\Users\paulsm\.m2\repository\org\apache\logging\log4j\log4j-core\2.12.1\log4j-core-2.12.1.jar;C:\Users\paulsm\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\paulsm\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\paulsm\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0\jackson-core-2.10.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, org.apache.logging.log4j.assignedSequences=12268, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\java\jdk-11.0.1\bin, sun.java.command=com.example.contactsapp.repositories.ContactsRepositoryImpl, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\paulsm, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2018-10-16, java.home=C:\Program Files\java\jdk-11.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.1+13, user.name=paulsm, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:derby:c:/temp/contactsdb, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, show_sql=true, hibernate.connection.driver_class=org.apache.derby.jdbc.EmbeddedDriver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\paulsm\AppData\Local\Temp\, java.version=11.0.1, user.dir=C:\paul\proj\ContactsApp\struts-rest\ContactsApp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@79b18230, java.library.path=C:\Program Files\java\jdk-11.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/java/jdk-11.0.1/bin/server;C:/Program Files/java/jdk-11.0.1/bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\java\jdk-11.0.1\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\dotnet\;C:\Program Files\PuTTY\;C:\Program Files\TortoiseGit\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Users\paulsm\.windows-build-tools\python27\;C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin;C:\Users\paulsm\AppData\Roaming\npm\node_modules\windows-build-tools\node_modules\.bin;C:\Users\paulsm\AppData\Roaming\npm\node_modules\.bin;C:\Users\paulsm\AppData\Roaming\npm;C:\Program Files\nodejs\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Users\paulsm\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\java\jdk-11.0.1\bin;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Users\paulsm\AppData\Local\Microsoft\WindowsApps;C:\Users\paulsm\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\paulsm\.dotnet\tools;C:\Users\paulsm\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;C:\Users\paulsm\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.1+13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
21:48:41.376 [main] DEBUG org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
21:48:41.376 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
21:48:41.376 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b4825f0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4cc01c7f]
21:48:41.423 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.contactsapp.models.Contact] is safe
21:48:41.423 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.contactsapp.models.Contact
21:48:41.439 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.contactsapp.models.Contact] is safe
21:48:41.439 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.contactsapp.models.Contact
21:48:41.626 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.contactsapp.models.Note] is safe
21:48:41.626 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.contactsapp.models.Note
21:48:41.626 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - Not known whether passed class name [com.example.contactsapp.models.Note] is safe
21:48:41.626 [main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.contactsapp.models.Note
21:48:41.642 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister - Static SQL for collection: com.example.contactsapp.models.Contact.notes
21:48:41.642 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row insert: update notes set contactId=? where noteId=?
21:48:41.642 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row update: update notes set  where noteId=?
21:48:41.642 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  Row delete: update notes set contactId=null where contactId=? and noteId=?
21:48:41.658 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister -  One-shot delete: update notes set contactId=null where contactId=?
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.example.contactsapp.models.Contact
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select contactId from contacts where contactId =?
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select contact_.contactId, contact_.name as name2_0_, contact_.email as email3_0_, contact_.phone1 as phone4_0_, contact_.phone2 as phone5_0_, contact_.address1 as address6_0_, contact_.address2 as address7_0_, contact_.city as city8_0_, contact_.state as state9_0_, contact_.zip as zip10_0_ from contacts contact_ where contact_.contactId=?
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into contacts (name, email, phone1, phone2, address1, address2, city, state, zip, contactId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update contacts set name=?, email=?, phone1=?, phone2=?, address1=?, address2=?, city=?, state=?, zip=? where contactId=?
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from contacts where contactId=?
21:48:41.658 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into contacts (contactId, name, email, phone1, phone2, address1, address2, city, state, zip) values (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
21:48:41.673 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ac68b0]
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : email
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone1
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone2
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address1
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address2
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : state
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : zip
21:48:41.673 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : notes
21:48:41.673 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c0df4ab]
21:48:41.673 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54326e9]
21:48:41.673 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.example.contactsapp.models.Contact)
    - Returns
       - EntityReturnImpl(entity=com.example.contactsapp.models.Contact, querySpaceUid=<gen:0>, path=com.example.contactsapp.models.Contact)
          - CollectionAttributeFetchImpl(collection=com.example.contactsapp.models.Contact.notes, querySpaceUid=<gen:1>, path=com.example.contactsapp.models.Contact.notes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.contactsapp.models.Note, querySpaceUid=<gen:2>, path=com.example.contactsapp.models.Contact.notes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.contactsapp.models.Contact)
          - SQL table alias mapping - contact0_
          - alias suffix - 0_
          - suffixed key columns - {contactI1_0_0_}

21:48:41.704 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.example.contactsapp.models.Contact [NONE]: select contact0_.contactId as contactI1_0_0_, contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_ from contacts contact0_ where contact0_.contactId=?
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c4b5ceb]
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : email
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone1
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone2
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address1
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address2
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : city
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : state
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : zip
21:48:41.704 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : notes
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e26a3df]
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a667c8]
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
21:48:41.704 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.example.contactsapp.models.Contact)
    - Returns
       - EntityReturnImpl(entity=com.example.contactsapp.models.Contact, querySpaceUid=<gen:0>, path=com.example.contactsapp.models.Contact)
          - CollectionAttributeFetchImpl(collection=com.example.contactsapp.models.Contact.notes, querySpaceUid=<gen:1>, path=com.example.contactsapp.models.Contact.notes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.contactsapp.models.Note, querySpaceUid=<gen:2>, path=com.example.contactsapp.models.Contact.notes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.contactsapp.models.Contact)
          - SQL table alias mapping - contact0_
          - alias suffix - 0_
          - suffixed key columns - {contactI1_0_0_}

21:48:41.704 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.example.contactsapp.models.Contact [READ]: select contact0_.contactId as contactI1_0_0_, contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_ from contacts contact0_ where contact0_.contactId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.example.contactsapp.models.Contact: select contact0_.contactId as contactI1_0_0_, contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_ from contacts contact0_ where contact0_.contactId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.example.contactsapp.models.Contact: select contact0_.contactId as contactI1_0_0_, contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_ from contacts contact0_ where contact0_.contactId=?
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.example.contactsapp.models.Note
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select noteId from notes where noteId =?
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select note_.noteId, note_.contactId as contactI2_1_, note_.text as text3_1_, note_.date as date4_1_ from notes note_ where note_.noteId=?
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into notes (contactId, text, date, noteId) values (?, ?, ?, ?)
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update notes set contactId=?, text=?, date=? where noteId=?
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from notes where noteId=?
21:48:41.720 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into notes (noteId, contactId, text, date) values (default, ?, ?, ?)
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f866f50]
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : Contact
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1201769d]
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : text
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.example.contactsapp.models.Note)
    - Returns
       - EntityReturnImpl(entity=com.example.contactsapp.models.Note, querySpaceUid=<gen:0>, path=com.example.contactsapp.models.Note)
          - EntityAttributeFetchImpl(entity=com.example.contactsapp.models.Contact, querySpaceUid=<gen:1>, path=com.example.contactsapp.models.Note.Contact)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.contactsapp.models.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {noteId1_1_0_}

21:48:41.720 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.example.contactsapp.models.Note [NONE]: select note0_.noteId as noteId1_1_0_, note0_.contactId as contactI2_1_0_, note0_.text as text3_1_0_, note0_.date as date4_1_0_ from notes note0_ where note0_.noteId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566c1e71]
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : Contact
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504497fa]
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : text
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.example.contactsapp.models.Note)
    - Returns
       - EntityReturnImpl(entity=com.example.contactsapp.models.Note, querySpaceUid=<gen:0>, path=com.example.contactsapp.models.Note)
          - EntityAttributeFetchImpl(entity=com.example.contactsapp.models.Contact, querySpaceUid=<gen:1>, path=com.example.contactsapp.models.Note.Contact)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.contactsapp.models.Note)
          - SQL table alias mapping - note0_
          - alias suffix - 0_
          - suffixed key columns - {noteId1_1_0_}

21:48:41.720 [main] DEBUG org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.example.contactsapp.models.Note [READ]: select note0_.noteId as noteId1_1_0_, note0_.contactId as contactI2_1_0_, note0_.text as text3_1_0_, note0_.date as date4_1_0_ from notes note0_ where note0_.noteId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.example.contactsapp.models.Note: select note0_.noteId as noteId1_1_0_, note0_.contactId as contactI2_1_0_, note0_.text as text3_1_0_, note0_.date as date4_1_0_ from notes note0_ where note0_.noteId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.example.contactsapp.models.Note: select note0_.noteId as noteId1_1_0_, note0_.contactId as contactI2_1_0_, note0_.text as text3_1_0_, note0_.date as date4_1_0_ from notes note0_ where note0_.noteId=?
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e67cfe1]
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55bf35e5]
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : Contact
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Property path deemed to be circular : Contact
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : text
21:48:41.720 [main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
21:48:41.720 [main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
21:48:41.736 [main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
21:48:41.736 [main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(collection=com.example.contactsapp.models.Contact.notes)
    - Returns
       - CollectionReturnImpl(collection=com.example.contactsapp.models.Contact.notes, querySpaceUid=<gen:0>, path=[com.example.contactsapp.models.Contact.notes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.contactsapp.models.Note, querySpaceUid=<gen:1>, path=[com.example.contactsapp.models.Contact.notes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.contactsapp.models.Contact.notes)
          - SQL table alias mapping - notes0_
          - alias suffix - 0_
          - suffixed key columns - {contactI2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - noteId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.contactsapp.models.Note)
                - SQL table alias mapping - notes0_
                - alias suffix - 1_
                - suffixed key columns - {noteId1_1_1_}

21:48:41.736 [main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader - Static select for collection com.example.contactsapp.models.Contact.notes: select notes0_.contactId as contactI2_1_0_, notes0_.noteId as noteId1_1_0_, notes0_.noteId as noteId1_1_1_, notes0_.contactId as contactI2_1_1_, notes0_.text as text3_1_1_, notes0_.date as date4_1_1_ from notes notes0_ where notes0_.contactId=?
21:48:41.767 [main] DEBUG org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
21:48:41.767 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
21:48:41.767 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
21:48:41.767 [main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
21:48:41.767 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
21:48:41.767 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
21:48:41.767 [main] DEBUG org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
21:48:41.767 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54c11750
21:48:41.783 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 7208bcfa-26eb-4acb-8ce1-9396494611b6 (<unnamed>)
21:48:41.783 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
21:48:41.845 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
21:48:41.861 [main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@23c7cb18
21:48:41.861 [main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
21:48:41.892 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: FROM com.example.contactsapp.models.Contact
21:48:41.902 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:41.908 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'com'
                |  |  |  \-[IDENT] Node: 'example'
                |  |  \-[IDENT] Node: 'contactsapp'
                |  \-[IDENT] Node: 'models'
                \-[IDENT] Node: 'Contact'

21:48:41.923 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.example.contactsapp.models.Contact (<no alias>) -> contact0_
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} contacts contact0_ ) )
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [contacts contact0_]
21:48:41.939 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
21:48:41.954 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (contacts)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'contact0_.contactId as contactI1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=contacts,tableAlias=contact0_,origin=null,columns={,className=com.example.contactsapp.models.Contact}}}
    |  \-[SQL_TOKEN] SqlFragment: 'contact0_.name as name2_0_, contact0_.email as email3_0_, contact0_.phone1 as phone4_0_, contact0_.phone2 as phone5_0_, contact0_.address1 as address6_0_, contact0_.address2 as address7_0_, contact0_.city as city8_0_, contact0_.state as state9_0_, contact0_.zip as zip10_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'contacts contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=contacts,tableAlias=contact0_,origin=null,columns={,className=com.example.contactsapp.models.Contact}}

21:48:41.954 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:41.954 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: FROM com.example.contactsapp.models.Contact
21:48:41.954 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select contact0_.contactId as contactI1_0_, contact0_.name as name2_0_, contact0_.email as email3_0_, contact0_.phone1 as phone4_0_, contact0_.phone2 as phone5_0_, contact0_.address1 as address6_0_, contact0_.address2 as address7_0_, contact0_.city as city8_0_, contact0_.state as state9_0_, contact0_.zip as zip10_0_ from contacts contact0_
21:48:41.954 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:41.970 [main] DEBUG org.hibernate.SQL - 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
Hibernate: 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
21:48:41.970 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< getContacts(): ct=0.
>> addContact()...
21:48:41.986 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
21:48:41.986 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
21:48:42.001 [main] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
21:48:42.001 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        contacts
        (contactId, name, email, phone1, phone2, address1, address2, city, state, zip) 
    values
        (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        contacts
        (contactId, name, email, phone1, phone2, address1, address2, city, state, zip) 
    values
        (default, ?, ?, ?, ?, ?, ?, ?, ?, ?)
21:48:42.064 [main] DEBUG org.hibernate.SQL - 
    
values
    identity_val_local()
Hibernate: 
    
values
    identity_val_local()
21:48:42.064 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 101
21:48:42.064 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
21:48:42.079 [main] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
21:48:42.079 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        notes
        (noteId, contactId, text, date) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        notes
        (noteId, contactId, text, date) 
    values
        (default, ?, ?, ?)
21:48:42.095 [main] DEBUG org.hibernate.SQL - 
    
values
    identity_val_local()
Hibernate: 
    
values
    identity_val_local()
21:48:42.095 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 101
21:48:42.095 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
21:48:42.095 [main] DEBUG org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
21:48:42.095 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        notes
        (noteId, contactId, text, date) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        notes
        (noteId, contactId, text, date) 
    values
        (default, ?, ?, ?)
21:48:42.095 [main] DEBUG org.hibernate.SQL - 
    
values
    identity_val_local()
Hibernate: 
    
values
    identity_val_local()
21:48:42.111 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 102
21:48:42.111 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
21:48:42.111 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
21:48:42.111 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
21:48:42.111 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
21:48:42.111 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [com.example.contactsapp.models.Contact.notes#101], was: [<unreferenced>] (initialized)
21:48:42.111 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
21:48:42.111 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
21:48:42.111 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
21:48:42.111 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Note{date=Thu Jan 16 21:48:41 EST 2020, noteId=102, text=This is a test note, Contact=com.example.contactsapp.models.Contact#101}
21:48:42.111 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Note{date=Thu Jan 16 21:48:42 EST 2020, noteId=101, text=Creating new contact, Contact=com.example.contactsapp.models.Contact#101}
21:48:42.111 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Contact{zip=null, notes=[com.example.contactsapp.models.Note#102, com.example.contactsapp.models.Note#101], contactId=101, address2=null, city=null, address1=null, name=Mickey Mouse, phone2=null, state=null, email=mm@abc.com, phone1=null}
21:48:42.111 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
21:48:42.111 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< addContact(), new contactId=101.
21:48:42.111 [main] DEBUG org.hibernate.SQL - 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
Hibernate: 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
21:48:42.126 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
21:48:42.126 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.example.contactsapp.models.Contact#101]
21:48:42.126 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Contact#101]
21:48:42.126 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Contact#101]
21:48:42.126 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< getContacts(): ct=1.
>> getContact(101)...
21:48:42.126 [main] DEBUG org.hibernate.SQL - 
    select
        contact0_.contactId as contactI1_0_0_,
        contact0_.name as name2_0_0_,
        contact0_.email as email3_0_0_,
        contact0_.phone1 as phone4_0_0_,
        contact0_.phone2 as phone5_0_0_,
        contact0_.address1 as address6_0_0_,
        contact0_.address2 as address7_0_0_,
        contact0_.city as city8_0_0_,
        contact0_.state as state9_0_0_,
        contact0_.zip as zip10_0_0_ 
    from
        contacts contact0_ 
    where
        contact0_.contactId=?
Hibernate: 
    select
        contact0_.contactId as contactI1_0_0_,
        contact0_.name as name2_0_0_,
        contact0_.email as email3_0_0_,
        contact0_.phone1 as phone4_0_0_,
        contact0_.phone2 as phone5_0_0_,
        contact0_.address1 as address6_0_0_,
        contact0_.address2 as address7_0_0_,
        contact0_.city as city8_0_0_,
        contact0_.state as state9_0_0_,
        contact0_.zip as zip10_0_0_ 
    from
        contacts contact0_ 
    where
        contact0_.contactId=?
21:48:42.142 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
21:48:42.142 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
21:48:42.142 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Contact#101]
21:48:42.142 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Contact#101]
21:48:42.142 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
21:48:42.142 [main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.example.contactsapp.models.Contact#101
21:48:42.142 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
21:48:42.142 [main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.142 [main] DEBUG org.hibernate.SQL - 
    select
        notes0_.contactId as contactI2_1_0_,
        notes0_.noteId as noteId1_1_0_,
        notes0_.noteId as noteId1_1_1_,
        notes0_.contactId as contactI2_1_1_,
        notes0_.text as text3_1_1_,
        notes0_.date as date4_1_1_ 
    from
        notes notes0_ 
    where
        notes0_.contactId=?
Hibernate: 
    select
        notes0_.contactId as contactI2_1_0_,
        notes0_.noteId as noteId1_1_0_,
        notes0_.noteId as noteId1_1_1_,
        notes0_.contactId as contactI2_1_1_,
        notes0_.text as text3_1_1_,
        notes0_.date as date4_1_1_ 
    from
        notes notes0_ 
    where
        notes0_.contactId=?
21:48:42.158 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Preparing collection intializer : [com.example.contactsapp.models.Contact.notes#101]
21:48:42.158 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #0
21:48:42.158 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.158 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl - Starting ResultSet row #1
21:48:42.158 [main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl - Found row of collection: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.158 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Note#101]
21:48:42.158 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Note#101]
21:48:42.158 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Note#102]
21:48:42.158 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Note#102]
21:48:42.158 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.example.contactsapp.models.Contact.notes
21:48:42.158 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.158 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.example.contactsapp.models.Contact.notes
21:48:42.158 [main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
21:48:42.158 [main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
<< getContact()@newId=id: 101
name: Mickey Mouse
email: mm@abc.com
notes: [
2020/01/16 21:48:41.986: This is a test note
2020/01/16 21:48:42.079: Creating new contact
].
>> updateContact(101)...
21:48:42.158 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
21:48:42.158 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
21:48:42.173 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
21:48:42.173 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
21:48:42.173 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
21:48:42.173 [main] DEBUG org.hibernate.engine.internal.Collections - Collection found: [com.example.contactsapp.models.Contact.notes#101], was: [com.example.contactsapp.models.Contact.notes#101] (initialized)
21:48:42.173 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
21:48:42.173 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
21:48:42.173 [main] DEBUG org.hibernate.internal.util.EntityPrinter - Listing entities:
21:48:42.173 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Note{date=2020-01-16 21:48:41.986, noteId=102, text=This is a test note, Contact=com.example.contactsapp.models.Contact#101}
21:48:42.173 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Note{date=2020-01-16 21:48:42.079, noteId=101, text=Creating new contact, Contact=com.example.contactsapp.models.Contact#101}
21:48:42.173 [main] DEBUG org.hibernate.internal.util.EntityPrinter - com.example.contactsapp.models.Contact{zip=00000, notes=[com.example.contactsapp.models.Note#102, com.example.contactsapp.models.Note#101], contactId=101, address2=null, city=Emerald City, address1=null, name=Mickey Mouse, phone2=null, state=Oz, email=mm@abc.com, phone1=null}
21:48:42.173 [main] DEBUG org.hibernate.SQL - 
    update
        contacts 
    set
        name=?,
        email=?,
        phone1=?,
        phone2=?,
        address1=?,
        address2=?,
        city=?,
        state=?,
        zip=? 
    where
        contactId=?
Hibernate: 
    update
        contacts 
    set
        name=?,
        email=?,
        phone1=?,
        phone2=?,
        address1=?,
        address2=?,
        city=?,
        state=?,
        zip=? 
    where
        contactId=?
21:48:42.189 [main] DEBUG org.hibernate.SQL - 
    update
        notes 
    set
        contactId=?,
        text=?,
        date=? 
    where
        noteId=?
Hibernate: 
    update
        notes 
    set
        contactId=?,
        text=?,
        date=? 
    where
        noteId=?
21:48:42.204 [main] DEBUG org.hibernate.SQL - 
    update
        notes 
    set
        contactId=?,
        text=?,
        date=? 
    where
        noteId=?
Hibernate: 
    update
        notes 
    set
        contactId=?,
        text=?,
        date=? 
    where
        noteId=?
21:48:42.204 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
21:48:42.204 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< updateContact(): added City, State, Zip and test note.
>> getContactsFetchAll()...
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: SELECT c FROM com.example.contactsapp.models.Contact c INNER JOIN FETCH c.notes
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[IDENT] Node: 'com'
       |  |  |  |  |  |  \-[IDENT] Node: 'example'
       |  |  |  |  |  \-[IDENT] Node: 'contactsapp'
       |  |  |  |  \-[IDENT] Node: 'models'
       |  |  |  \-[IDENT] Node: 'Contact'
       |  |  \-[ALIAS] Node: 'c'
       |  \-[JOIN] Node: 'JOIN'
       |     +-[INNER] Node: 'INNER'
       |     +-[FETCH] Node: 'FETCH'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'c'
       |        \-[IDENT] Node: 'notes'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'c'

21:48:42.204 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.example.contactsapp.models.Contact (c) -> contact0_
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> contact0_.contactId
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : notes -> org.hibernate.type.SetType(com.example.contactsapp.models.Contact.notes)
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElementFactory - createEntityAssociation() : One to many - path = c.notes role = com.example.contactsapp.models.Contact.notes associatedEntityName = com.example.contactsapp.models.Note
21:48:42.204 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.example.contactsapp.models.Note (<no alias>) -> notes1_
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromClause - addJoinByPathMap() : c.notes -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=notes,tableAlias=notes1_,origin=contacts contact0_,columns={contact0_.contactId ,className=com.example.contactsapp.models.Note}}
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for c.notes : notes notes1_
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c.notes -> .
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'notes notes1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.example.contactsapp.models.Contact.notes,tableName=notes,tableAlias=notes1_,origin=contacts contact0_,columns={contact0_.contactId ,className=com.example.contactsapp.models.Note}}

21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : c -> contact0_.contactId
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} contact0_.contactId ) ( FromClause{level=1} ( contacts contact0_ notes notes1_ ) ) )
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [contacts contact0_]
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [inner join notes notes1_ on contact0_.contactId=notes1_.contactId]
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notes,contacts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'contact0_.contactId as contactI1_0_0_' {alias=c, className=com.example.contactsapp.models.Contact, tableAlias=contact0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'notes1_.noteId as noteId1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.example.contactsapp.models.Contact.notes,tableName=notes,tableAlias=notes1_,origin=contacts contact0_,columns={contact0_.contactId ,className=com.example.contactsapp.models.Note}}}
    |  +-[SQL_TOKEN] SqlFragment: 'contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'notes1_.contactId as contactI2_1_1_, notes1_.text as text3_1_1_, notes1_.date as date4_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'notes1_.contactId as contactI2_1_0__, notes1_.noteId as noteId1_1_0__'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c], fromElementByTableAlias=[contact0_, notes1_], fromElementsByPath=[c.notes], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'contacts contact0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=contacts,tableAlias=contact0_,origin=null,columns={,className=com.example.contactsapp.models.Contact}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join notes notes1_ on contact0_.contactId=notes1_.contactId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.example.contactsapp.models.Contact.notes,tableName=notes,tableAlias=notes1_,origin=contacts contact0_,columns={contact0_.contactId ,className=com.example.contactsapp.models.Note}}

21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: SELECT c FROM com.example.contactsapp.models.Contact c INNER JOIN FETCH c.notes
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select contact0_.contactId as contactI1_0_0_, notes1_.noteId as noteId1_1_1_, contact0_.name as name2_0_0_, contact0_.email as email3_0_0_, contact0_.phone1 as phone4_0_0_, contact0_.phone2 as phone5_0_0_, contact0_.address1 as address6_0_0_, contact0_.address2 as address7_0_0_, contact0_.city as city8_0_0_, contact0_.state as state9_0_0_, contact0_.zip as zip10_0_0_, notes1_.contactId as contactI2_1_1_, notes1_.text as text3_1_1_, notes1_.date as date4_1_1_, notes1_.contactId as contactI2_1_0__, notes1_.noteId as noteId1_1_0__ from contacts contact0_ inner join notes notes1_ on contact0_.contactId=notes1_.contactId
21:48:42.220 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.220 [main] DEBUG org.hibernate.SQL - 
    select
        contact0_.contactId as contactI1_0_0_,
        notes1_.noteId as noteId1_1_1_,
        contact0_.name as name2_0_0_,
        contact0_.email as email3_0_0_,
        contact0_.phone1 as phone4_0_0_,
        contact0_.phone2 as phone5_0_0_,
        contact0_.address1 as address6_0_0_,
        contact0_.address2 as address7_0_0_,
        contact0_.city as city8_0_0_,
        contact0_.state as state9_0_0_,
        contact0_.zip as zip10_0_0_,
        notes1_.contactId as contactI2_1_1_,
        notes1_.text as text3_1_1_,
        notes1_.date as date4_1_1_,
        notes1_.contactId as contactI2_1_0__,
        notes1_.noteId as noteId1_1_0__ 
    from
        contacts contact0_ 
    inner join
        notes notes1_ 
            on contact0_.contactId=notes1_.contactId
Hibernate: 
    select
        contact0_.contactId as contactI1_0_0_,
        notes1_.noteId as noteId1_1_1_,
        contact0_.name as name2_0_0_,
        contact0_.email as email3_0_0_,
        contact0_.phone1 as phone4_0_0_,
        contact0_.phone2 as phone5_0_0_,
        contact0_.address1 as address6_0_0_,
        contact0_.address2 as address7_0_0_,
        contact0_.city as city8_0_0_,
        contact0_.state as state9_0_0_,
        contact0_.zip as zip10_0_0_,
        notes1_.contactId as contactI2_1_1_,
        notes1_.text as text3_1_1_,
        notes1_.date as date4_1_1_,
        notes1_.contactId as contactI2_1_0__,
        notes1_.noteId as noteId1_1_0__ 
    from
        contacts contact0_ 
    inner join
        notes notes1_ 
            on contact0_.contactId=notes1_.contactId
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Result set row: 0
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.example.contactsapp.models.Contact#101], EntityKey[com.example.contactsapp.models.Note#101]
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Result set row: 1
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Result row: EntityKey[com.example.contactsapp.models.Contact#101], EntityKey[com.example.contactsapp.models.Note#102]
21:48:42.220 [main] DEBUG org.hibernate.loader.Loader - Found row of collection: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.220 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Contact#101]
21:48:42.220 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Contact#101]
21:48:42.220 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Note#101]
21:48:42.236 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Note#101]
21:48:42.236 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [com.example.contactsapp.models.Note#102]
21:48:42.236 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [com.example.contactsapp.models.Note#102]
21:48:42.236 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections were found in result set for role: com.example.contactsapp.models.Contact.notes
21:48:42.236 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - Collection fully initialized: [com.example.contactsapp.models.Contact.notes#101]
21:48:42.236 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext - 1 collections initialized for role: com.example.contactsapp.models.Contact.notes
21:48:42.236 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< getContactsFetchAll(): #/contacts=2.
  contact: id: 101
name: Mickey Mouse
email: mm@abc.com
notes: [
2020/01/16 21:48:42.079: Creating new contact
2020/01/16 21:48:41.986: This is a test note
]
  contact: id: 101
name: Mickey Mouse
email: mm@abc.com
notes: [
2020/01/16 21:48:42.079: Creating new contact
2020/01/16 21:48:41.986: This is a test note
]
>> deleteContact(101)...
21:48:42.236 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
21:48:42.236 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - begin
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: delete from com.example.contactsapp.models.Contact where contactId  = ?1
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'example'
    |        |  |  \-[IDENT] Node: 'contactsapp'
    |        |  \-[IDENT] Node: 'models'
    |        \-[IDENT] Node: 'Contact'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'contactId'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

21:48:42.236 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - delete << begin [level=1, statement=delete]
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.example.contactsapp.models.Contact (<no alias>) -> contact0_
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : contactId -> org.hibernate.type.IntegerType@522b2631
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.contactId -> contactId
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - delete : finishing up [level=1, statement=delete]
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - delete >> end [level=1, statement=delete]
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (contacts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[contact0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'contacts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=contacts,tableAlias=contact0_,origin=null,columns={,className=com.example.contactsapp.models.Contact}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'contactId' {propertyName=contactId,dereferenceType=PRIMITIVE,getPropertyPath=contactId,path={synthetic-alias}.contactId,tableAlias=contact0_,className=com.example.contactsapp.models.Contact,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'contactId' {originalText=contactId}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.IntegerType@522b2631}

21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.236 [main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker - throwQueryException() : no errors
21:48:42.252 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        contacts 
    where
        contactId=?
Hibernate: 
    delete 
    from
        contacts 
    where
        contactId=?
21:48:42.298 [main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl - committing
21:48:42.298 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
21:48:42.298 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< deleteContact(), iret=1.
21:48:42.298 [main] DEBUG org.hibernate.SQL - 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
Hibernate: 
    select
        contact0_.contactId as contactI1_0_,
        contact0_.name as name2_0_,
        contact0_.email as email3_0_,
        contact0_.phone1 as phone4_0_,
        contact0_.phone2 as phone5_0_,
        contact0_.address1 as address6_0_,
        contact0_.address2 as address7_0_,
        contact0_.city as city8_0_,
        contact0_.state as state9_0_,
        contact0_.zip as zip10_0_ 
    from
        contacts contact0_
21:48:42.298 [main] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
<< getContacts(): ct=0.
21:48:42.298 [main] DEBUG org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
21:48:42.298 [main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6afeaf2d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4cc01c7f]
21:48:42.298 [main] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
21:48:42.298 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001008: Cleaning up connection pool [jdbc:derby:c:/temp/contactsdb]
21:48:42.298 [main] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
